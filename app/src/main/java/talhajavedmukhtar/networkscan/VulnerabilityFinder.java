package talhajavedmukhtar.networkscan;

import android.content.Context;
import android.util.Log;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashMap;

/**
 * Created by Talha on 10/22/18.
 */

public class VulnerabilityFinder {
    final String TAG = Tags.makeTag("VulnerabilityFinder");

    private HashMap<String,HashMap<String,ArrayList<String>>> vulnerabilityMap;

    //private HashMap<String,String> cveDB;

    public VulnerabilityFinder(Context c){
        Log.d(TAG,"Starting to create map");
        initializeMap(c);
        Log.d(TAG,"Map created!");
    }

    private void populateProducts(Context c){
        BufferedReader bufferedReader = null;
        try{
            bufferedReader = new BufferedReader(new InputStreamReader(c.getAssets().open("vulnerabilityData/productsList.txt")));
            String line;
            while ((line = bufferedReader.readLine()) != null) {
                String productName = line.substring(0,line.length());
                HashMap<String,ArrayList<String>> newMap = new HashMap<>();
                if(productName.equals("folder_gallery")){
                    Log.d(TAG,"folder_gallery was encountered");
                }
                vulnerabilityMap.put(productName,newMap);
            }
        }catch (Exception ex){
            Log.d(TAG,ex.getMessage());
        }finally {
            if (bufferedReader != null) {
                try {
                    bufferedReader.close();
                } catch (Exception ex) {
                    Log.d(TAG,ex.getMessage());
                }
            }
        }

    }

    private ArrayList<String> getArrayFromString(String arr){
        String withoutBrackets = arr.substring(1,arr.length()-1);
        String[] elements = withoutBrackets.split(", ");

        ArrayList<String> arrFromString = new ArrayList<>();

        for(String elem: elements){
            String clean = elem.substring(1,elem.length()-1);

            arrFromString.add(clean);
        }

        return arrFromString;
    }

    private void initializeMap(Context c){
        vulnerabilityMap = new HashMap<>();

        populateProducts(c);

        Log.d(TAG,"Done populating");

        BufferedReader bufferedReader = null;
        try{
            bufferedReader = new BufferedReader(new InputStreamReader(c.getAssets().open("vulnerabilityData/dataFile.txt")));
            String line;
            while ((line = bufferedReader.readLine()) != null) {
                line = line.substring(0,line.length());
                String[] parts = line.split(" : ");

                String product = parts[0];
                String version = parts[1];
                ArrayList<String> idents = getArrayFromString(parts[2]);

                //Log.d(TAG,"Trying for prod: "+ product);

                vulnerabilityMap.get(product).put(version,idents);
            }
        }catch (Exception ex){
            Log.d(TAG,ex.getMessage());
        }finally {
            if (bufferedReader != null) {
                try {
                    bufferedReader.close();
                } catch (Exception ex) {
                    Log.d(TAG,ex.getMessage());
                }
            }
        }
    }

    public ArrayList<String> getVulnerabilities(String product, String version){
        ArrayList<String> vulnerabilities;
        try{
           vulnerabilities = vulnerabilityMap.get(product).get(version);
        }catch (Exception ex){
            vulnerabilities = new ArrayList<>();
        }

        return vulnerabilities;
    }

}
